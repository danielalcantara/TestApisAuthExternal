package br.com.cea.util;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class DateUtil {

	public static Date converterStringToDate(final String date) throws ParseException {
		String dt = date;
		Date data = null;
		java.sql.Date dataSql = null;
		SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
		try {
			data = dateFormat.parse(dt);
			dataSql = new java.sql.Date(data.getTime());
		} catch (ParseException e) {
			throw new ParseException("Falha ao tentar converter a data [" + date + "] " + e.getMessage(), 0);
		}

		return dataSql;
	}

	public static Date addMonthsOnDate(Date dateBase, Integer amountOfMonths) {
		Calendar cal = Calendar.getInstance();
		cal.setTime(dateBase);
		cal.add(Calendar.MONTH, amountOfMonths);

		return cal.getTime();
	}

	public static Date addDaysOnDate(Date dateBase, Integer amountOfDays) {
		Calendar cal = Calendar.getInstance();
		cal.setTime(dateBase);
		cal.add(Calendar.DATE, amountOfDays);

		return cal.getTime();
	}

	public static Timestamp getDateAtual() {
		Timestamp tmp = new Timestamp(System.currentTimeMillis());
		return tmp;
	}

	public static int compareDateWithoutTime(Date date1Param, Date date2Param) {
		Calendar cal = Calendar.getInstance();
		cal.setTime(date1Param);
		cal.set(Calendar.HOUR_OF_DAY, 0);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);
		cal.set(Calendar.MILLISECOND, 0);
		Date date1 = cal.getTime();
		cal.setTime(date2Param);
		cal.set(Calendar.HOUR_OF_DAY, 0);
		cal.set(Calendar.MINUTE, 0);
		cal.set(Calendar.SECOND, 0);
		cal.set(Calendar.MILLISECOND, 0);
		Date date2 = cal.getTime();

		return date1.compareTo(date2);
	}

}
